Write a Hadoop MapReduce program that, given as input a directed graph represented as a list of edges, produces the same graph where for each edge (x,y) there is also the edge (y,x). 
The solution must satisfy the following constraints:
- Each pair (x,y) should appear only once in the output graph, i.e., there must be no repetitions of edges.
- Edges (x,y) and (y,x) for each x <> y should appear consecutively in the output file.
- The types of intermediate keys and values emitted by the Mapper should be user-defined.

Both input and output files must have the form:
 
x1   \t   y1
x2   \t   y2
x3   \t   y3

Try as input the following graph, which contains multiple edges (edge (2,1) appears twice) and one self-loop (1,1):
1	3
2	1
0	1
3	1
2	0
1	1
2	1
 
The output graph should contain the following 9 edges:
0	1
1	0
0	2
2	0
1	1
1	2
2	1
1	3
3	1
